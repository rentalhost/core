- controllers começados por _ são considerados privados e só podem ser executados via execute()
- mover o sistema do file-coverage para uma library especializada;
- coverage: tentar eliminar as linhas que não possuem itens a serem validados (mudar [H] para [F], pois só será exibido erros);
- controller: adicionar $_proposed_url nas variáveis;
- controller: tentar evitar o lançamento de exceções em uso interno;
- controller: alterar automaticamente o tipo de saída se a função se chamar *_json;
- controller: pensar numa forma de um controller ser chamado sempre antes de todos, para alteração de rotas;
- controller: pensar também em como reescrever rotas, por exemplo '[*]/user' => 'master/[@1]/user'
- test: é preciso testar quando um modular não for informado!
- error: mostrar a opçao "enviar um email quando houver solução";
- database: adicionar suporte a transações;
- database: adicionar diferentes propriedades na conexão;
- core: usar modelo jquery para métodos (attr ao invés de get_attr, attr ao invés de set_attr)
- core: is_domain - aceitar *, ? e (|)
- core: get_modular_parts - opção que permita transformar ^/ ou ^__ no módulo base (atual) facilmente
	- nota: deverá verificar todas as funções que usam a função para aplicar a alteração, se necessário!

-- MILESTONE 1.1 --
- atom: classes atom_code para gerenciar o código (parser, formatter e compiler);
- test: mostrar diferença entre dois resultados (quando failed);
- core: sistema de regras para as classes (rules);
- core: controle de versão para SQL (criar tabelas e registros via XML, e fazer atualizações dentre versões);

-- SE NECESSÁRIO --
- test: aplicar tradução de path nas keys dos resultados